import 'dart:math'; import 'package:flutter/material.dart'; 

void main() { runApp(MaterialApp( title: 'Jogo do Tesouro', home: TesouroGame(), )); } 

class TesouroGame extends StatefulWidget { @override _TesouroGameState createState() => _TesouroGameState(); } 

class _TesouroGameState extends State { final Random random = Random(); int? tesouro; int? bomba; int? pirata; String mensagem = 'Clique em um n√∫mero para encontrar o tesouro!'; List botoesHabilitados = List.filled(20, true); bool fimDeJogo = false; 

@override void initState() { super.initState(); iniciarJogo(); } 

void iniciarJogo() { setState(() { tesouro = random.nextInt(20) + 1; do { bomba = random.nextInt(20) + 1; } while (bomba == tesouro); do { pirata = random.nextInt(20) + 1; } while (pirata == tesouro || pirata == bomba); 

 mensagem = 'Clique em um n√∫mero para encontrar o tesouro!'; 
  botoesHabilitados = List.filled(20, true); 
  fimDeJogo = false; 
}); 
  

} 

void verificarEscolha(int numero) { if (fimDeJogo || !botoesHabilitados[numero - 1]) return; 

setState(() { 
  if (numero == tesouro) { 
    mensagem = 'üèÜ Voc√™ encontrou o tesouro!'; 
    fimDeJogo = true; 
    botoesHabilitados = List.filled(20, false); 
  } else if (numero == bomba) { 
    mensagem = 'üí£ Voc√™ encontrou uma bomba! Game over.'; 
    fimDeJogo = true; 
    botoesHabilitados = List.filled(20, false); 
  } else if (numero == pirata) { 
    mensagem = '‚ò†Ô∏è Voc√™ encontrou o pirata! Fim de jogo.'; 
    fimDeJogo = true; 
    botoesHabilitados = List.filled(20, false); 
  } else { 
    botoesHabilitados[numero - 1] = false; 
    if (numero < tesouro!) { 
      mensagem = 'O tesouro est√° em um n√∫mero MAIOR.'; 
    } else { 
      mensagem = 'O tesouro est√° em um n√∫mero MENOR.'; 
    } 
  } 
}); 
  

} 

@override Widget build(BuildContext context) { return Scaffold( body: SafeArea( child: Column( children: [ // T√≠tulo Padding( padding: const EdgeInsets.all(16.0), child: Text( 'Jogo do Tesouro', style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold), ), ), 

       // Caixa de mensagem 
        Padding( 
          padding: const EdgeInsets.symmetric(horizontal: 24), 
          child: Container( 
            height: 80, 
            width: double.infinity, 
            alignment: Alignment.center, 
            decoration: BoxDecoration( 
              border: Border.all(), 
              borderRadius: BorderRadius.circular(8), 
            ), 
            child: Text( 
              mensagem, 
              textAlign: TextAlign.center, 
              style: TextStyle(fontSize: 16), 
            ), 
          ), 
        ), 
 
        SizedBox(height: 16), 
 
        // Grid de bot√µes (4x5) 
        Expanded( 
          child: Padding( 
            padding: const EdgeInsets.symmetric(horizontal: 24), 
            child: GridView.count( 
              crossAxisCount: 5, 
              mainAxisSpacing: 10, 
              crossAxisSpacing: 10, 
              children: List.generate(20, (index) { 
                return ElevatedButton( 
                  onPressed: botoesHabilitados[index] 
                      ? () => verificarEscolha(index + 1) 
                      : null, 
                  style: ElevatedButton.styleFrom( 
                    padding: EdgeInsets.zero, 
                  ), 
                  child: Text('${index + 1}'), 
                ); 
              }), 
            ), 
          ), 
        ), 
 
        Divider(thickness: 2), 
 
        // Rodap√© com bot√£o de reiniciar 
        Padding( 
          padding: const EdgeInsets.all(16.0), 
          child: Column( 
            children: [ 
              Text('Novo Jogo', style: TextStyle(fontSize: 16)), 
              SizedBox(height: 8), 
              ElevatedButton( 
                onPressed: iniciarJogo, 
                style: ElevatedButton.styleFrom( 
                  padding: EdgeInsets.symmetric(horizontal: 40, vertical: 12), 
                ), 
                child: Text('üîÅ Reiniciar'), 
              ), 
            ], 
          ), 
        ), 
      ], 
    ), 
  ), 
); 
  

} } 

 